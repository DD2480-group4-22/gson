var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":274,"id":6906,"methods":[{"el":55,"sc":3,"sl":33},{"el":78,"sc":3,"sl":57},{"el":85,"sc":3,"sl":80},{"el":99,"sc":3,"sl":87},{"el":114,"sc":3,"sl":101},{"el":127,"sc":3,"sl":116},{"el":134,"sc":3,"sl":129},{"el":141,"sc":3,"sl":136},{"el":148,"sc":3,"sl":143},{"el":155,"sc":3,"sl":150},{"el":162,"sc":3,"sl":157},{"el":169,"sc":3,"sl":164},{"el":176,"sc":3,"sl":171},{"el":183,"sc":3,"sl":178},{"el":190,"sc":3,"sl":185},{"el":197,"sc":3,"sl":192},{"el":204,"sc":3,"sl":199},{"el":211,"sc":3,"sl":206},{"el":218,"sc":3,"sl":213},{"el":226,"sc":3,"sl":220},{"el":246,"sc":3,"sl":228},{"el":254,"sc":3,"sl":248},{"el":262,"sc":3,"sl":256},{"el":268,"sc":3,"sl":264},{"el":273,"sc":3,"sl":270}],"name":"JsonPrimitiveTest","sl":31}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_1005":{"methods":[{"sl":80}],"name":"testParsingStringAsBoolean","pass":true,"statements":[{"sl":81},{"sl":83},{"sl":84}]},"test_134":{"methods":[{"sl":199}],"name":"testFloatEqualsDouble","pass":true,"statements":[{"sl":200},{"sl":201},{"sl":202},{"sl":203}]},"test_157":{"methods":[{"sl":87}],"name":"testParsingStringAsNumber","pass":true,"statements":[{"sl":88},{"sl":90},{"sl":91},{"sl":92},{"sl":93},{"sl":94},{"sl":95},{"sl":96},{"sl":97},{"sl":98}]},"test_215":{"methods":[{"sl":270}],"name":"testDeepCopy","pass":true,"statements":[{"sl":271},{"sl":272}]},"test_219":{"methods":[{"sl":116}],"name":"testExponential","pass":true,"statements":[{"sl":117},{"sl":119},{"sl":120},{"sl":121},{"sl":123},{"sl":124}]},"test_267":{"methods":[{"sl":206}],"name":"testFloatEqualsBigDecimal","pass":true,"statements":[{"sl":207},{"sl":208},{"sl":209},{"sl":210}]},"test_29":{"methods":[{"sl":220}],"name":"testValidJsonOnToString","pass":true,"statements":[{"sl":221},{"sl":222},{"sl":224},{"sl":225}]},"test_291":{"methods":[{"sl":264}],"name":"testEqualsDoesNotEquateStringAndNonStringTypes","pass":true,"statements":[{"sl":265},{"sl":266},{"sl":267}]},"test_304":{"methods":[{"sl":213}],"name":"testDoubleEqualsBigDecimal","pass":true,"statements":[{"sl":214},{"sl":215},{"sl":216},{"sl":217}]},"test_305":{"methods":[{"sl":150}],"name":"testByteEqualsBigInteger","pass":true,"statements":[{"sl":151},{"sl":152},{"sl":153},{"sl":154}]},"test_320":{"methods":[{"sl":129}],"name":"testByteEqualsShort","pass":true,"statements":[{"sl":130},{"sl":131},{"sl":132},{"sl":133}]},"test_375":{"methods":[{"sl":164}],"name":"testShortEqualsLong","pass":true,"statements":[{"sl":165},{"sl":166},{"sl":167},{"sl":168}]},"test_403":{"methods":[{"sl":171}],"name":"testShortEqualsBigInteger","pass":true,"statements":[{"sl":172},{"sl":173},{"sl":174},{"sl":175}]},"test_476":{"methods":[{"sl":248}],"name":"testEqualsAcrossTypes","pass":true,"statements":[{"sl":249},{"sl":250},{"sl":251},{"sl":252},{"sl":253}]},"test_521":{"methods":[{"sl":256}],"name":"testEqualsIntegerAndBigInteger","pass":true,"statements":[{"sl":257},{"sl":258},{"sl":261}]},"test_587":{"methods":[{"sl":178}],"name":"testIntegerEqualsLong","pass":true,"statements":[{"sl":179},{"sl":180},{"sl":181},{"sl":182}]},"test_628":{"methods":[{"sl":143}],"name":"testByteEqualsLong","pass":true,"statements":[{"sl":144},{"sl":145},{"sl":146},{"sl":147}]},"test_646":{"methods":[{"sl":192}],"name":"testLongEqualsBigInteger","pass":true,"statements":[{"sl":193},{"sl":194},{"sl":195},{"sl":196}]},"test_766":{"methods":[{"sl":33}],"name":"testNulls","pass":true,"statements":[{"sl":35},{"sl":36},{"sl":40},{"sl":41},{"sl":45},{"sl":46},{"sl":50},{"sl":51}]},"test_781":{"methods":[{"sl":157}],"name":"testShortEqualsInteger","pass":true,"statements":[{"sl":158},{"sl":159},{"sl":160},{"sl":161}]},"test_827":{"methods":[{"sl":101}],"name":"testStringsAndChar","pass":true,"statements":[{"sl":102},{"sl":103},{"sl":104},{"sl":105},{"sl":107},{"sl":108},{"sl":109},{"sl":110},{"sl":112},{"sl":113}]},"test_83":{"methods":[{"sl":136}],"name":"testByteEqualsInteger","pass":true,"statements":[{"sl":137},{"sl":138},{"sl":139},{"sl":140}]},"test_893":{"methods":[{"sl":57}],"name":"testBoolean","pass":true,"statements":[{"sl":58},{"sl":60},{"sl":61},{"sl":64},{"sl":65},{"sl":67},{"sl":68},{"sl":70},{"sl":71},{"sl":73},{"sl":74},{"sl":76},{"sl":77}]},"test_927":{"methods":[{"sl":185}],"name":"testIntegerEqualsBigInteger","pass":true,"statements":[{"sl":186},{"sl":187},{"sl":188},{"sl":189}]},"test_945":{"methods":[{"sl":228}],"name":"testEquals","pass":true,"statements":[{"sl":229},{"sl":230},{"sl":231},{"sl":232},{"sl":233},{"sl":234},{"sl":236},{"sl":238},{"sl":239},{"sl":241},{"sl":243},{"sl":244},{"sl":245}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines
