var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":126,"id":7905,"methods":[{"el":45,"sc":3,"sl":41},{"el":57,"sc":3,"sl":47},{"el":65,"sc":3,"sl":59},{"el":76,"sc":3,"sl":67},{"el":88,"sc":7,"sl":82},{"el":95,"sc":3,"sl":78},{"el":105,"sc":3,"sl":97},{"el":112,"sc":3,"sl":107}],"name":"CircularReferenceTest","sl":38},{"el":116,"id":7952,"methods":[],"name":"CircularReferenceTest.ContainsReferenceToSelfType","sl":114},{"el":120,"id":7952,"methods":[],"name":"CircularReferenceTest.ClassWithSelfReference","sl":118},{"el":125,"id":7952,"methods":[],"name":"CircularReferenceTest.ClassWithSelfReferenceArray","sl":122}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_174":{"methods":[{"sl":78},{"sl":82}],"name":"testSelfReferenceCustomHandlerSerialization","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":84},{"sl":85},{"sl":86},{"sl":90},{"sl":91}]},"test_204":{"methods":[{"sl":67}],"name":"testSelfReferenceArrayFieldSerialization","pass":true,"statements":[{"sl":68},{"sl":69},{"sl":71},{"sl":72}]},"test_4":{"methods":[{"sl":97}],"name":"testDirectedAcyclicGraphSerialization","pass":true,"statements":[{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103},{"sl":104}]},"test_438":{"methods":[{"sl":59}],"name":"testSelfReferenceIgnoredInSerialization","pass":true,"statements":[{"sl":60},{"sl":61},{"sl":63},{"sl":64}]},"test_514":{"methods":[{"sl":47}],"name":"testCircularSerialization","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53}]},"test_570":{"methods":[{"sl":107}],"name":"testDirectedAcyclicGraphDeserialization","pass":true,"statements":[{"sl":108},{"sl":109},{"sl":110},{"sl":111}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines
