var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":52,"id":7534,"methods":[{"el":43,"sc":3,"sl":36},{"el":51,"sc":3,"sl":45}],"name":"MoreAsserts","sl":29}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_1046":{"methods":[{"sl":45}],"name":"testEqualsOnEmptyObject","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":50}]},"test_121":{"methods":[{"sl":45}],"name":"testEqualsNonEmptyArray","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":50}]},"test_138":{"methods":[{"sl":36}],"name":"testCollectionOfEnumsDeserialization","pass":true,"statements":[{"sl":37},{"sl":38},{"sl":39}]},"test_36":{"methods":[{"sl":45}],"name":"testEqualsAndHashcode","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":50}]},"test_410":{"methods":[{"sl":45}],"name":"testEqualsNonEmptyObject","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":50}]},"test_476":{"methods":[{"sl":45}],"name":"testEqualsAcrossTypes","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":50}]},"test_564":{"methods":[{"sl":45}],"name":"testEqualsAndHashCode","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":50}]},"test_945":{"methods":[{"sl":45}],"name":"testEquals","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":50}]},"test_950":{"methods":[{"sl":45}],"name":"testEqualsOnEmptyArray","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":50}]},"test_981":{"methods":[{"sl":36}],"name":"testEnumSubclassAsParameterizedType","pass":true,"statements":[{"sl":37},{"sl":38},{"sl":39}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [981, 138], [981, 138], [981, 138], [981, 138], [], [], [], [], [], [476, 950, 564, 121, 410, 1046, 945, 36], [476, 950, 564, 121, 410, 1046, 945, 36], [476, 950, 564, 121, 410, 1046, 945, 36], [476, 950, 564, 121, 410, 1046, 945, 36], [476, 950, 564, 121, 410, 1046, 945, 36], [476, 950, 564, 121, 410, 1046, 945, 36], [], []]
