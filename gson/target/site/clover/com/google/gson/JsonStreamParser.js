var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":126,"id":1054,"methods":[{"el":63,"sc":3,"sl":61},{"el":73,"sc":3,"sl":69},{"el":98,"sc":3,"sl":84},{"el":116,"sc":3,"sl":106},{"el":125,"sc":3,"sl":123}],"name":"JsonStreamParser","sl":53}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_19":{"methods":[{"sl":84},{"sl":106}],"name":"testIterator","pass":true,"statements":[{"sl":85},{"sl":89},{"sl":90},{"sl":107},{"sl":108},{"sl":109}]},"test_24":{"methods":[{"sl":84},{"sl":106}],"name":"testNoSideEffectForHasNext","pass":true,"statements":[{"sl":85},{"sl":89},{"sl":90},{"sl":107},{"sl":108},{"sl":109}]},"test_325":{"methods":[{"sl":84},{"sl":106}],"name":"testParseTwoStrings","pass":true,"statements":[{"sl":85},{"sl":89},{"sl":90},{"sl":107},{"sl":108},{"sl":109}]},"test_68":{"methods":[{"sl":69},{"sl":84},{"sl":106}],"name":"testReadWriteTwoObjects","pass":true,"statements":[{"sl":70},{"sl":71},{"sl":72},{"sl":85},{"sl":89},{"sl":90},{"sl":107},{"sl":108},{"sl":109}]},"test_696":{"methods":[{"sl":69},{"sl":84},{"sl":106}],"name":"testReadWriteTwoStrings","pass":true,"statements":[{"sl":70},{"sl":71},{"sl":72},{"sl":85},{"sl":89},{"sl":90},{"sl":107},{"sl":108},{"sl":109}]},"test_850":{"methods":[{"sl":84},{"sl":106}],"name":"testCallingNextBeyondAvailableInput","pass":true,"statements":[{"sl":85},{"sl":86},{"sl":89},{"sl":90},{"sl":107},{"sl":108},{"sl":109}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines
